<div class="tabs">
  {{#each data}}
  <div class="tab" onclick="openTab(event, {{@index}})">
    {{@key}}
  </div>
  {{/each}}
</div>

{{#each data}}
<div class="camp" data-tab="{{@index}}">
  <div class="meta">
    <span>Aantal deelnemers: {{this.participantCount}}</span>
    <span>Aantal vrouw: {{this.womenCount}}</span>
    <span>Aantal man: {{this.menCount}}</span>
    <span>Gemiddelde leeftijd: {{this.averageAge}}</span>
  </div>
  <div class="header">
    <span onclick="sortBy('naam', event)">Naam</span>
    <span onclick="sortBy('adres', event)">Adres</span>
    <span onclick="sortBy('geslacht', event)">Geslacht</span>
    <span onclick="sortBy('geboorteDatum', event)">Geboortedatum</span>
    <span onclick="sortBy('leeftijd', event)">Leeftijd</span>
    <span onclick="sortBy('vakantie', event)">Kamp</span>
    <span onclick="sortBy('dieet', event)">Dieet</span>
    <span onclick="sortBy('gezondheid', event)">Gezondheid</span>
    <span onclick="sortBy('comments', event)">Opmerkingen</span>
    <span onclick="sortBy('vertrek_terug', event)">Van/tot</span>
    <span onclick="sortBy('opstap_uitstap', event)">Opstap/uitstap</span>
  </div>
  <div class="rows">
    {{#each this.participants}}
    <div class="row" data-participant="{{this.json}}">
      <span onclick="toggleParticipant(event)">{{this.naam}}</span>
      <span>{{this.adres}}</span>
      <span>{{this.geslacht}}</span>
      <span>{{this.geboorteDatum}}</span>
      <span>{{this.leeftijd}}</span>
      <span>{{this.vakantie}}</span>
      <span>{{this.dieet}}</span>
      <span>{{this.gezondheid}}</span>
      <span>{{this.comments}}</span>
      <span>{{this.vertrek_terug}}</span>
      <span>{{this.opstap_uitstap}}</span>
    </div>
    {{/each}}
  </div>
</div>
{{/each}}
<script>
  function openTab(event, index) {
    const camps = document.querySelectorAll(".camp");
    for (let i = 0; i < camps.length; i++) {
      camps[i].style.display = "none";
    }

    const tabs = document.querySelectorAll(".tab");
    for (i = 0; i < camps.length; i++) {
      tabs[i].className = tabs[i].className.replace(" active", "");
    }

    document.querySelector(`[data-tab="${index}"]`).style.display = "block";
    event.currentTarget.className += " active";
  }

  function sortBy(property, event) {
    const camp = event.currentTarget.parentNode.parentNode;
    const rows = camp.querySelector('.rows');
    const participants = Array.from(rows.querySelectorAll('.row'));
    participants.sort((p1, p2) => {
      return JSON.parse(p1.dataset.participant)[property] > JSON.parse(p2.dataset.participant)[property] ? -1 : 1;
    });

    const sortUp = event.currentTarget.className.includes('sortUp');
    if (sortUp) {
      participants.reverse();
    }

    const sortBys = camp.querySelectorAll(".header span");
    for (i = 0; i < sortBys.length; i++) {
      sortBys[i].className = sortBys[i].className.replace(" sortUp", "").replace(" sortUp", "");
    }
    event.currentTarget.className += sortUp ? " sortDown" : " sortUp";

    for (let i = 0; i < participants.length; i++) {
      rows.appendChild(participants[i]);
    }
  }

  function toggleParticipant(event) {
    const row = event.currentTarget.parentNode;
    const columns = row.querySelectorAll('span');
    columns.forEach(c => {
      c.style.display = c.style.display == "block" ? "" : "block";
    })
  }
</script>